generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Basket {
  id          Int         @id @default(autoincrement())
  type        String // e.g. "plastic", "wooden", or model type
  createdAt   DateTime    @default(now())
  inventories Inventory[]
  movements   Movement[]
}

model Place {
  id            Int         @id @default(autoincrement())
  name          String
  type          PlaceType // "WAREHOUSE", "STORE", "VAN"
  inventories   Inventory[]
  movementsFrom Movement[]  @relation("MovementFrom")
  movementsTo   Movement[]  @relation("MovementTo")

  routeStores RouteStore[]
}

enum PlaceType {
  WAREHOUSE
  STORE
  VAN
}

model Driver {
  id     Int     @id @default(autoincrement())
  name   String
  van    Van?    @relation(fields: [vanId], references: [id])
  vanId  Int?    @unique
  routes Route[]
}

model Van {
  id          Int     @id @default(autoincrement())
  plateNumber String  @unique
  driver      Driver?
}

model Route {
  id          Int          @id @default(autoincrement())
  name        String
  driver      Driver       @relation(fields: [driverId], references: [id])
  driverId    Int
  routeStores RouteStore[]
  createdAt   DateTime     @default(now())
}

model RouteStore {
  id      Int   @id @default(autoincrement())
  route   Route @relation(fields: [routeId], references: [id])
  routeId Int
  place   Place @relation(fields: [placeId], references: [id])
  placeId Int
  order   Int // store visit order in the route
}

model Inventory {
  id       Int    @id @default(autoincrement())
  place    Place  @relation(fields: [placeId], references: [id])
  placeId  Int
  basket   Basket @relation(fields: [basketId], references: [id])
  basketId Int
  quantity Int    @default(0)

  @@unique([placeId, basketId])
}

model Movement {
  id          Int      @id @default(autoincrement())
  basket      Basket   @relation(fields: [basketId], references: [id])
  basketId    Int
  fromPlace   Place?   @relation("MovementFrom", fields: [fromPlaceId], references: [id])
  fromPlaceId Int?
  toPlace     Place?   @relation("MovementTo", fields: [toPlaceId], references: [id])
  toPlaceId   Int?
  quantity    Int
  timestamp   DateTime @default(now())
}
